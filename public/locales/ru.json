{
  "loading": {
    "message_1": "Удаление всего вашего скрытого порно...",
    "message_2": "Инициализация инициализатора..."
  },
  "navigation": {
    "link": {
      "home": "Главная",
      "about": "О проекте",
      "playground": "GraphiQL IDE"
    },
    "docs": {
      "description": "Схема GraphQL предоставляет корневой тип для каждого вида операции"
    }
  },
  "welcomeSection": {
    "title": "Добро пожаловать в GraphiQL!",
    "subtitle": "GraphiQL - это площадка для graphQL запросов",
    "description": "Эта площадка создана в результате финального проекта курса 'React 2023 Q1' от RS School. GraphiQL предоставляет собой полное и понятное описание данных API Rick and Morty, дает возможность запрашивать именно то, что вам нужно и ничего больше, позволяет использовать мощные инструменты разработчика.",
    "advantages": {
      "ask": "Запросите то, что вам нужно, и получите именно это",
      "get": "Получите множество данных за один запрос",
      "describe": "Опишите, что возможно с помощью системы типов"
    },
    "getStarted": "Начать"
  },
  "developers": {
    "developers": "Разработчики",
    "names": {
      "basto": "Индар Басто",
      "minkov": "Виктор Миньков",
      "balakaeva": "Раиля Балакаева"
    },
    "roles": {
      "developer": "Frontend разработчик",
      "teamLead": "Тимлид"
    }
  },
  "auth": {
    "login_btn": "Войти",
    "logout_btn": "Выйти",
    "placeholder_email": "Электронная почта",
    "placeholder_password": "Пароль",
    "success": {
      "title": "Вы успешно авторизовались!",
      "subTitle": "Вы будете перенаправлены на страницу GraphiQL IDE через {{count}}. Если этого не произошло, пожалуйста, нажмите кнопку.",
      "button": "Перейти в GraphiQL IDE"
    },
    "login": {
      "login_btn": "Войти",
      "login_state": "Или <State>зарегистрируйтесь</State>",
      "success_message": "Вы успешно вошли в систему!"
    },
    "register": {
      "placeholder_check_password": "Повторите пароль",
      "register_btn": "Зарегистрироваться",
      "register_state": "Или <State>авторизуйтесь</State>",
      "success_message": "Вы успешно зарегистрировались!"
    },
    "validator": {
      "required_email": "Пожалуйста, введите адрес почты!",
      "required_password": "Пожалуйста, введите пароль!",
      "invalid_email": "Неверный формат почты!",
      "password": {
        "min_value": "Пароль должен быть не менее 8 символов!",
        "need_letter": "Пароль должен содержать хотя бы одну букву!",
        "need_digit": "Пароль должен содержать хотя бы одну цифру!",
        "need_special": "Пароль должен содержать хотя бы один специальный символ!",
        "must_match": "Пароли не совпадают"
      }
    },
    "errors": {
      "type": {
        "login": "Авторизация",
        "register": "Регистрация"
      },
      "not_authorized": "Простите, у вас нет доступа к этой странице.",
      "auth/too-many-requests": "Превышено количество попыток входа. Попробуйте позже",
      "auth/network-request-failed": "Проблемы с сетью. Проверьте ваше интернет-соединение",
      "auth/wrong-password": "Неверный пароль",
      "auth/invalid-email": "Неверный адрес электронной почты",
      "auth/user-not-found": "Пользователь не найден",
      "auth/email-already-in-use": "Пользователь с данным адресом уже зарегистрирован",
      "auth/user-disabled": "Аккаунт отключен администратором"
    },
    "logout": {
      "modal": {
        "title": "Вы хотите выйти?",
        "content": "Вы не сможете пользоваться GraphiQL IDE, если выйдите из системы!",
        "cancel": "Отмена",
        "confirm": "Выйти"
      },
      "success_message": "Вы успешно вышли из системы!"
    }
  },
  "error404": {
    "title": "Извините, такой страницы не существует.",
    "backHome": "Вернуться на главную"
  },
  "playground": {
    "queryPlaceholder": "Введите ваш QraphQL запрос",
    "responsePlaceholder": "Ответ сервера:",
    "variables": "Переменные",
    "executeQuery": "Выполнить запрос",
    "clearQueryArea": "Очистить область запроса",
    "copyQuery": "Копировать запрос"
  },
  "explorer": {
    "root": {
      "title": "Схема GraphQL предоставляет корневой тип для каждого вида операции.",
      "types": "Корневые типы",
      "type": {
        "query": "Запрос",
        "mutation": "Мутация",
        "subscription": "Подписка"
      }
    }
  }
}
